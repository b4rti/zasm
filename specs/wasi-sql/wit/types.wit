interface types {
    /// one single row item
    record row {
        field-name: string,
        value: data-type,
    }
    
    /// common data types
    variant data-type {
        int32(s32),
        int64(s64),
        uint32(u32),
        uint64(u64),
        float(float64),
        double(float64),
        str(string),
        boolean(bool),
        date(string),
        time(string),
        timestamp(string),
        binary(list<u8>),
        null
    }

    /// allows parameterized queries
    /// e.g., prepare("SELECT * FROM users WHERE name = ? AND age = ?", vec!["John Doe", "32"])
    resource statement {
        prepare: static func(query: string, params: list<string>) -> result<statement, error>;
    }
    /// An error resource type.
    /// Currently, this provides only one function to return a string representation
    /// of the error. In the future, this will be extended to provide more information.
    resource error {
		trace: func() -> string;
  	}
    
    /// A connection to a sql store.
    resource connection {
        open: static func(name: string) -> result<connection, error>;
    }
}